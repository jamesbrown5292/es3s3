[{"/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/climate-governance/ClimateGovernanceBar.js":"1","/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/data-helpers/chartHelpers.js":"2","/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/climate-opportunities/ClimateOpportunitiesBySector.js":"3"},{"size":5596,"mtime":1607311757393,"results":"4","hashOfConfig":"5"},{"size":1992,"mtime":1607310141368,"results":"6","hashOfConfig":"5"},{"size":5427,"mtime":1607312783964,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11o3hlq",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/climate-governance/ClimateGovernanceBar.js",["15"],"/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/data-helpers/chartHelpers.js",[],"/Users/jamesbrown/nlp/es3s3/nivo-graphs/src/climate-opportunities/ClimateOpportunitiesBySector.js",["16","17"],"import { React, useEffect, useState } from 'react';\nimport { ResponsiveBar } from '@nivo/bar'\nimport climateOpportunitiesData from './climate-opportunities-data'\nimport axios from 'axios';\nimport chartHelpers from \"../data-helpers/chartHelpers.js\"\n\nconst ClimateOpportunitiesBySector = () => {\n    const [state, setState] = useState({});\n\n    useEffect(() => {\n        axios.get('https://4mny4n5ap1.execute-api.us-east-1.amazonaws.com/prod')\n          .then((res) => {\n          setState(res.data);\n          });\n      }, []);\n\n    const columnHeadersLookup = {\n        company: \"company\",\n        industry: \"industry\",\n        opportunities: \"1_does_the_company_identify_climate-related_opportunities\",\n    };\n\n    const buildChart = () => {\n        if (state.ResultSet) {\n          const oilGasOpportunitiesYes = chartHelpers.countResponsesByFilter(\n            columnHeadersLookup['opportunities'],\n            'Yes',\n            state.ResultSet.Rows,\n            columnHeadersLookup['industry'], 'Oil & Gas')\n\n          const oilGasOpportunitiesNo = chartHelpers.countResponsesByFilter(\n            columnHeadersLookup['opportunities'],\n            'No',\n            state.ResultSet.Rows,\n            columnHeadersLookup['industry'], 'Oil & Gas');\n\n          const EUPOpportunitiesYes = chartHelpers.countResponsesByFilter(\n            columnHeadersLookup['opportunities'],\n            'Yes',\n            state.ResultSet.Rows,\n            columnHeadersLookup['industry'], 'Electric Utility & Power Generators')\n          const EUPOpportunitiesNo = chartHelpers.countResponsesByFilter(\n            columnHeadersLookup['opportunities'],\n            'No',\n            state.ResultSet.Rows,\n            columnHeadersLookup['industry'], 'Electric Utility & Power Generators')      \n     \n            return [\n              {\n                indicator: 'Yes',\n                'Oil & Gas': oilGasOpportunitiesYes,\n                'Electric, Utility & Power Generators': EUPOpportunitiesYes\n              },\n              {\n                indicator: 'No',\n                'Oil & Gas': oilGasOpportunitiesNo,\n                'Electric, Utility & Power Generators': EUPOpportunitiesNo\n              }\n            ]\n        };\n      }\n\n    const APIdata = buildChart();\n\n      \n    \n\n    const data =  climateOpportunitiesData.climateOpportunitiesData.barDataOil;\n      if (APIdata) {\n          {console.log(\"API data is \", APIdata)}\n        return (\n            <div className=\"graph-container  page-left\" style={{ width: 400, height: 450}}>\n                <h5>Do companies identify climate-related opportunities? Comparison by sector.</h5>\n                <ResponsiveBar\n                    data={APIdata}\n                    height={400}\n                    width={400}\n                    keys={[ 'Oil & Gas', 'Electric, Utility & Power Generators']}\n                    indexBy=\"indicator\"\n                    margin={{ top: 25, right: 0, bottom: 50, left: 60 }}\n                    padding={0.4}\n                    valueScale={{ type: 'linear' }}\n                    indexScale={{ type: 'band', round: true }}\n                    colors={{ scheme: 'category10' }}\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    borderRadius={45}\n                    enableGridY={false}\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{\n                        tickSize: 6,\n                        tickPadding: 10,\n                        tickRotation: 0,\n                        legend: 'Industry',\n                        legendPosition: 'middle',\n                        legendOffset: 40\n                    }}\n                    axisLeft={{\n                        tickSize: 10,\n                        tickPadding: 5,\n                        tickRotation: 0,\n                        legend: 'Number of companies',\n                        legendPosition: 'middle',\n                        legendOffset: -40\n                    }}\n                    labelSkipWidth={12}\n                    labelSkipHeight={12}\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n                    legends={[\n                        {\n                            dataFrom: 'keys',\n                            anchor: 'right',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 50,\n                            translateY: 0,\n                            itemsSpacing: 0,\n                            itemWidth: 100,\n                            itemHeight: 60,\n                            itemDirection: 'left-to-right',\n                            itemOpacity: 0.85,\n                            symbolSize: 20,\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }\n                    ]}\n                    animate={true}\n                    motionStiffness={90}\n                    motionDamping={15}\n                />\n            </div>\n        )\n      }\n      return null;\n  }\n\nexport default ClimateOpportunitiesBySector",{"ruleId":"18","severity":1,"message":"19","line":98,"column":9,"nodeType":"20","messageId":"21","endLine":98,"endColumn":13},{"ruleId":"18","severity":1,"message":"19","line":68,"column":11,"nodeType":"20","messageId":"21","endLine":68,"endColumn":15},{"ruleId":"22","severity":1,"message":"23","line":70,"column":11,"nodeType":"24","messageId":"25","endLine":70,"endColumn":49},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]